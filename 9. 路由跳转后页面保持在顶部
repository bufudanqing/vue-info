参考：
1.
官方提供的 -- 【滚动行为】
https://router.vuejs.org/zh-cn/advanced/scroll-behavior.html
2.
http://www.zhimengzhe.com/Javascriptjiaocheng/360847.html
======================
滚动行为

使用前端路由，当切换到新路由时，想要页面滚到顶部，或者是保持原先的滚动位置，就像重新加载页面那样。 vue-router 能做到，而且更好，它让你可以自定义路由切换时页面如何滚动。

注意: 这个功能只在 HTML5 history 模式下可用。

当创建一个 Router 实例，你可以提供一个 scrollBehavior 方法：

const router = new VueRouter({
  routes: [...],
  scrollBehavior (to, from, savedPosition) {
    // return 期望滚动到哪个的位置
  }
})


scrollBehavior 方法接收 to 和 from 路由对象。
第三个参数 savedPosition 当且仅当 popstate 导航 (通过浏览器的 前进/后退 按钮触发) 时才可用。
这个方法返回滚动位置的对象信息，长这样：
举例：

scrollBehavior (to, from, savedPosition) {
  return { x: 0, y: 0 }
}
对于所有路由导航，简单地让页面滚动到顶部。

返回 savedPosition，在按下 后退/前进 按钮时，就会像浏览器的原生表现那样：

scrollBehavior (to, from, savedPosition) {
  if (savedPosition) {
    return savedPosition
  } else {
    return { x: 0, y: 0 }
  }
}

如果你要模拟『滚动到锚点』的行为：

scrollBehavior (to, from, savedPosition) {
  if (to.hash) {
    return {
      selector: to.hash
    }
  }
}
=====================

未实践代码：

router.afterEach((to, from, next) => {
    window.scrollTo(0, 0);
});

可用代码：

import Vue from 'vue'
import Router from 'vue-router'
import index from '@/components/index.vue'
 
Vue.use(Router)
 
const router = new Router({
  mode: 'history',//这种方法只能在history模式下使用
  routes: [
    {
      path: '/',
      name: 'index',
      component: index
    }
  ],
  scrollBehavior (to, from, savedPosition) {
    if (savedPosition) {
      return savedPosition  //游览器返回记住位置
    } else {
      return { x: 0, y: 0 } //滚动到顶
    }
  }
})
export default router
